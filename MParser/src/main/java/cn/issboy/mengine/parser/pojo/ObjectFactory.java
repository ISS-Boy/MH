//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.03 at 07:57:09 PM CST 
//


package cn.issboy.mengine.parser.pojo;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Monitor }
     * 
     */
    public Monitor createMonitor() {
        return new Monitor();
    }

    /**
     * Create an instance of {@link CharacteristicType }
     * 
     */
    public CharacteristicType createCharacteristicType() {
        return new CharacteristicType();
    }

    /**
     * Create an instance of {@link GroupType }
     * 
     */
    public GroupType createGroupType() {
        return new GroupType();
    }

    /**
     * Create an instance of {@link FilterType }
     * 
     */
    public FilterType createFilterType() {
        return new FilterType();
    }

    /**
     * Create an instance of {@link FilterType.Filters }
     * 
     */
    public FilterType.Filters createFilterTypeFilters() {
        return new FilterType.Filters();
    }

    /**
     * Create an instance of {@link AggregationType }
     * 
     */
    public AggregationType createAggregationType() {
        return new AggregationType();
    }

    /**
     * Create an instance of {@link AggregationType.AggregationValues }
     * 
     */
    public AggregationType.AggregationValues createAggregationTypeAggregationValues() {
        return new AggregationType.AggregationValues();
    }

    /**
     * Create an instance of {@link JoinType }
     * 
     */
    public JoinType createJoinType() {
        return new JoinType();
    }

    /**
     * Create an instance of {@link JoinType.JoinTargets }
     * 
     */
    public JoinType.JoinTargets createJoinTypeJoinTargets() {
        return new JoinType.JoinTargets();
    }

    /**
     * Create an instance of {@link SelectType }
     * 
     */
    public SelectType createSelectType() {
        return new SelectType();
    }

    /**
     * Create an instance of {@link SelectType.Selects }
     * 
     */
    public SelectType.Selects createSelectTypeSelects() {
        return new SelectType.Selects();
    }

    /**
     * Create an instance of {@link Monitor.MonitorQueries }
     * 
     */
    public Monitor.MonitorQueries createMonitorMonitorQueries() {
        return new Monitor.MonitorQueries();
    }

    /**
     * Create an instance of {@link Monitor.Pattern }
     * 
     */
    public Monitor.Pattern createMonitorPattern() {
        return new Monitor.Pattern();
    }

    /**
     * Create an instance of {@link Monitor.Dashboard }
     * 
     */
    public Monitor.Dashboard createMonitorDashboard() {
        return new Monitor.Dashboard();
    }

    /**
     * Create an instance of {@link Monitor.Datasource }
     * 
     */
    public Monitor.Datasource createMonitorDatasource() {
        return new Monitor.Datasource();
    }

    /**
     * Create an instance of {@link PatternType }
     * 
     */
    public PatternType createPatternType() {
        return new PatternType();
    }

    /**
     * Create an instance of {@link ElasticSearchConnection }
     * 
     */
    public ElasticSearchConnection createElasticSearchConnection() {
        return new ElasticSearchConnection();
    }

    /**
     * Create an instance of {@link KafkaConnectionType }
     * 
     */
    public KafkaConnectionType createKafkaConnectionType() {
        return new KafkaConnectionType();
    }

    /**
     * Create an instance of {@link OpentsdbConnection }
     * 
     */
    public OpentsdbConnection createOpentsdbConnection() {
        return new OpentsdbConnection();
    }

    /**
     * Create an instance of {@link GrafanaConnection }
     * 
     */
    public GrafanaConnection createGrafanaConnection() {
        return new GrafanaConnection();
    }

    /**
     * Create an instance of {@link PanelType }
     * 
     */
    public PanelType createPanelType() {
        return new PanelType();
    }

    /**
     * Create an instance of {@link DataDescription }
     * 
     */
    public DataDescription createDataDescription() {
        return new DataDescription();
    }

    /**
     * Create an instance of {@link OperationDescription }
     * 
     */
    public OperationDescription createOperationDescription() {
        return new OperationDescription();
    }

    /**
     * Create an instance of {@link GrowthType }
     * 
     */
    public GrowthType createGrowthType() {
        return new GrowthType();
    }

    /**
     * Create an instance of {@link WindowType }
     * 
     */
    public WindowType createWindowType() {
        return new WindowType();
    }

    /**
     * Create an instance of {@link CharacteristicType.Characteristic }
     * 
     */
    public CharacteristicType.Characteristic createCharacteristicTypeCharacteristic() {
        return new CharacteristicType.Characteristic();
    }

    /**
     * Create an instance of {@link GroupType.Groups }
     * 
     */
    public GroupType.Groups createGroupTypeGroups() {
        return new GroupType.Groups();
    }

    /**
     * Create an instance of {@link FilterType.Filters.Filter }
     * 
     */
    public FilterType.Filters.Filter createFilterTypeFiltersFilter() {
        return new FilterType.Filters.Filter();
    }

    /**
     * Create an instance of {@link AggregationType.AggregationValues.Name }
     * 
     */
    public AggregationType.AggregationValues.Name createAggregationTypeAggregationValuesName() {
        return new AggregationType.AggregationValues.Name();
    }

    /**
     * Create an instance of {@link JoinType.JoinTargets.Target }
     * 
     */
    public JoinType.JoinTargets.Target createJoinTypeJoinTargetsTarget() {
        return new JoinType.JoinTargets.Target();
    }

    /**
     * Create an instance of {@link SelectType.Selects.Name }
     * 
     */
    public SelectType.Selects.Name createSelectTypeSelectsName() {
        return new SelectType.Selects.Name();
    }

    /**
     * Create an instance of {@link Monitor.MonitorQueries.Query }
     * 
     */
    public Monitor.MonitorQueries.Query createMonitorMonitorQueriesQuery() {
        return new Monitor.MonitorQueries.Query();
    }

    /**
     * Create an instance of {@link Monitor.Pattern.PatternLib }
     * 
     */
    public Monitor.Pattern.PatternLib createMonitorPatternPatternLib() {
        return new Monitor.Pattern.PatternLib();
    }

    /**
     * Create an instance of {@link Monitor.Dashboard.Panels }
     * 
     */
    public Monitor.Dashboard.Panels createMonitorDashboardPanels() {
        return new Monitor.Dashboard.Panels();
    }

    /**
     * Create an instance of {@link Monitor.Datasource.Kafka }
     * 
     */
    public Monitor.Datasource.Kafka createMonitorDatasourceKafka() {
        return new Monitor.Datasource.Kafka();
    }

    /**
     * Create an instance of {@link Monitor.Datasource.Elasticsearch }
     * 
     */
    public Monitor.Datasource.Elasticsearch createMonitorDatasourceElasticsearch() {
        return new Monitor.Datasource.Elasticsearch();
    }

    /**
     * Create an instance of {@link Monitor.Datasource.Opentsdb }
     * 
     */
    public Monitor.Datasource.Opentsdb createMonitorDatasourceOpentsdb() {
        return new Monitor.Datasource.Opentsdb();
    }

    /**
     * Create an instance of {@link Monitor.Datasource.Grafana }
     * 
     */
    public Monitor.Datasource.Grafana createMonitorDatasourceGrafana() {
        return new Monitor.Datasource.Grafana();
    }

}
