package cn.issboy.streamapp;
## using if-else to import different operations-related classes
######################
## example code below
######################
## #if($ops == "join")
##  import join-related-classes
## #elseif($ops == "filter"))
##  import filter-related-classes
## ……

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.common.serialization.Deserializer;
import org.apache.kafka.common.serialization.Serde;
import org.apache.kafka.common.serialization.Serdes;
import org.apache.kafka.common.serialization.Serializer;
import org.apache.kafka.streams.KafkaStreams;
import org.apache.kafka.streams.StreamsConfig;
import org.apache.kafka.streams.kstream.JoinWindows;
import org.apache.kafka.streams.kstream.KStream;
import org.apache.kafka.streams.kstream.KStreamBuilder;
import org.apache.kafka.streams.state.HostInfo;
import org.apache.kafka.streams.state.RocksDBConfigSetter;
import org.mhealth.open.data.avro.MEvent;
import org.mhealth.open.data.avro.SPatient;
import org.rocksdb.Options;

## better not to use wildcard(*)
import java.io.IOException;
import java.util.Collections;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import io.confluent.kafka.serializers.AbstractKafkaAvroSerDeConfig;
import io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde;